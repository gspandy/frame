<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd"
	default-lazy-init="false">
	<description>分布式 事务 配置</description>
	<!-- 事务管理器 Start -->
	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
		init-method="init" destroy-method="close">
		<property name="forceShutdown">
			<value>true</value>
		</property>
	</bean>
	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
		<property name="transactionTimeout" value="300" />
	</bean>
	<bean id="transactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager">
			<ref bean="atomikosTransactionManager" />
		</property>
		<property name="userTransaction">
			<ref bean="atomikosUserTransaction" />
		</property>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- 事务管理器 End -->


	<tx:advice id="mybatis_advice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- NOT_SUPPORTED 以非事务方式执行操作，如果当前存在事务，就将当前事务挂起 -->
			<tx:method name="get*" read-only="true" propagation="NOT_SUPPORTED" />
			<!-- <tx:method name="select*" read-only="true" propagation="NOT_SUPPORTED" 
				/> -->
			<tx:method name="login" read-only="true" propagation="NOT_SUPPORTED" />
			<!-- 单据临时表校验，启用新事务，挂起现有事务 -->
			<tx:method timeout="300" name="gen*" propagation="REQUIRES_NEW" />
			<!-- 单据流，启用新事务，挂起现有事务 -->
			<tx:method timeout="300" name="savePof*" propagation="REQUIRES_NEW" />
			<!-- 批量查询价格，启用新事务，挂起现有事务 -->
			<!-- <tx:method timeout="300" name="bulk*" propagation="REQUIRES_NEW"/> -->
			<tx:method name="*" rollback-for="RuntimeException,Exception" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="mybatis_pc"
			expression="(execution(* mb.erp.dr.o2o.service.impl.*.*.*(..))) 
                    or (execution(* mb.erp.dr.soa.old.service.impl.*.*.*(..)))
                    or (execution(* mb.erp.dr.soa.service.impl.*.*.*(..))))" />
		<aop:advisor advice-ref="mybatis_advice" pointcut-ref="mybatis_pc" />
	</aop:config>

</beans>